[package]
name = "rust"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]
wee_alloc = ["dep:wee_alloc"]

[dependencies]
league-toolkit = { git = "https://github.com/LeagueToolkit/league-toolkit", branch = "alan/wasm", default-features = false, features = [
  "serde",
  "rust_backends",
] }

serde = "1.0.130"
serde_derive = "1.0.130"
serde_json = "1.0.68"
wasm-bindgen = { version = "0.2.63", features = ["serde-serialize"] }
wasm-bindgen-futures = "0.4"
web-sys = { version = "0.3", features = [
  "Blob",
  "File",
  "FileReader",
  'Headers',
  'Request',
  'RequestInit',
  'RequestMode',
  'Response',
  'Window',
] }
js-sys = { version = "0.3", features = [] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }
thiserror = "1.0.63"
xxhash-rust = { version = "0.8.12", features = ["xxh3"] }
tracing-wasm = "0.2.1"
anyhow = "1.0.86"
itertools = "0.13.0"
tracing = "0.1.40"
tsify-next = "0.5.3"
tracing-subscriber = "0.3.18"
tracing-log = "0.2.0"
gloo-utils = "0.2.0"

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
lto = true
